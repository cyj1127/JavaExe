<함수>
프로세스 위주의 구성
옛날 사회는 피라미드 구조
결제를 받기위한 상향식 연결고리가 중요
기능이 중심이 되는 시대/기능 단위

<클래스>
클래스도 자료형
우리가 직접 만든 사용자 정의 자료형
클래스 객체(클래스의 변수) = new(힙에 할당한다) 클래스의 생성자함수 호출;
함수와 다르게 독립성의 필요성
함수와 변수를 모두 포함해야 독립성을 유지할 수 있다.
일상생활에서도 사람과 사물간의 상호작용과 같다.(ex.모니터와 사람)
의미전달을 하기위해 동사와 명사가 필요, 동사,명사 = 함수,변수
눈에 보이는 실체가 중요시 되는 시대/개념 단위
함수에 비해 설계를 명확하게 표현하기 좋음
클래스는 자로형이므로
여러 개의 변수 즉, 객체를 얼마든지 만들어낼 수 있다.
그리고 각 객체는 독립된 공간을 가지므로
내부의 값을 다르게 가질 수 있다.

<public static void vs public void 차이>

[static void]
static메서드는 객체를 만들지 않아도 바로 사용가능하다.
범용적인 기능의 함수를 만들 때
어느 곳에서나 쉽게 사용하고 싶은 함수를 만들 때
객체에 따라 변수의 값의 적용을 다르게 받지 않아도 될 때

[void]
객체가 최초 생성될 때 비로소 메서드가 메모리에 올라간다.
객체가 있어야 사용가능하다.//따로 선언을 해줘야함

생성자 함수(매서드)
1)클래스 이름과 동일
2)return 형이 없다.
3)객체 생성되면 자동으로 가장 먼저 호출된다.
4)객체의 초기화 작업
5)필드변수의 초기화 작업